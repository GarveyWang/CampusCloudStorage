<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campusCloudStorage.dao.UserFriendDao">
  <resultMap id="BaseResultMap" type="com.campusCloudStorage.entity.UserFriend">
    <id column="from_id" jdbcType="INTEGER" property="fromId" />
    <id column="to_id" jdbcType="INTEGER" property="toId" />
    <result column="permitted" jdbcType="TINYINT" property="permitted" />
  </resultMap>
  <sql id="Base_Column_List">
    from_id, to_id, permitted
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.campusCloudStorage.entity.UserFriendKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_friend
    where from_id = #{fromId,jdbcType=INTEGER}
      and to_id = #{toId,jdbcType=INTEGER}
  </select>
  <select id="selectUnpermittedFriends" parameterType="integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_friend
    where from_id = #{fromId,jdbcType=INTEGER}
      and permitted = 0
  </select>
  <select id="selectFriendRequests" parameterType="integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_friend
    where to_id = #{toId,jdbcType=INTEGER}
    and permitted = 0
  </select>
  <select id="selectFriends" parameterType="integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_friend
    where permitted=1 and (from_id = #{uId,jdbcType=INTEGER} or user_friend.to_id = #{uId,jdbcType=INTEGER})
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.campusCloudStorage.entity.UserFriendKey">
    delete from user_friend
    where from_id = #{fromId,jdbcType=INTEGER}
      and to_id = #{toId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.campusCloudStorage.entity.UserFriend">
    insert ignore into user_friend (from_id, to_id, permitted
      )
    values (#{fromId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, #{permitted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.campusCloudStorage.entity.UserFriend">
    insert into user_friend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromId != null">
        from_id,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="permitted != null">
        permitted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromId != null">
        #{from_id,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        #{to_id,jdbcType=INTEGER},
      </if>
      <if test="permitted != null">
        #{permitted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.campusCloudStorage.entity.UserFriend">
    update user_friend
    <set>
      <if test="permitted != null">
        permitted = #{permitted,jdbcType=TINYINT},
      </if>
    </set>
    where from_id = #{fromId,jdbcType=INTEGER}
      and to_id = #{toId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.campusCloudStorage.entity.UserFriend">
    update user_friend
    set permitted = #{permitted,jdbcType=TINYINT}
    where from_id = #{fromId,jdbcType=INTEGER}
      and to_id = #{toId,jdbcType=INTEGER}
  </update>
</mapper>